Create a folder
go inside the folder
right click and open gitbash

1) git init   #start git in the folder 

2) touch file1 file2      #it will create blank files with name file1 and file2 in your folder 

3) git status     #it will tell you the status of your git in your repo 

4) git add .    #add the files from working directory to staging area

5) git config --global user.name "akshat"    #onetime process to give name in setting of git that who is working on 

6) git config --global user.email "akshat@apicletech.com"    #one time process to give email in setting of git that who is working

7) git config --list   #to check your configuration is set properly or not   #press q to exit

8) git status

9) git commit -m"first commit"    

10) git log --oneline   #to check all the commit


#################################GIT IGNORE in GIT#######################

11) touch error.log 

12) touch .gitignore

13) go to the folder and open .gitignore  and put the text : error.log 

14) git add .

15) git commit -m"gitignore created"

15) now make some changes in error.log

16) git status 


###########################IGNORING MULTIPLE FILES IN GIT #############################

17) open .gitignore and put *.log 

18) git add .

19) git commit -m"gitignore updated"

20) now create .log files ...

21) git status ...you will see no changes

##################################################################



Create a github.com account . if you already have it signin


22) create a repo public on your github account


23) go to your git bash again

    git remote add origin <<link>>         #add github repo with your local repo 

24) git push -u origin master              #this will push the local repo to remote repo 

25) touch file6 file7

26) git add .

27) git commit -m"created a new commit on a new day"

28) git push -u 

#################################Resolve conflicts ##################################


29) go to github and make some changes in file1

30) come to local repo make some changes in file1

31) git add .

32) git status

33) git commit -m"fouth commit"

34) git push -u   #error will come

35) git pull    #you will see confluict error

36) now open file1 and update the final content in local repo 

37) git add .

38) git commit -m"final updated file1"

39) git push -u

40) now it will be pushed 


##########################################Branches#########################

41) git branch branch1

42) git branch   #will show you the all the branche


43) git checkout branch1   # you will come to branch1

44) git checkout    #you will see * is at branch1 now

45) touch fileinbranch1

46) git add .

47) git commit -m"first commit in branch1"

48) git checkout master

49) touch fileinmaster

50) git add .

51) git commit -m"filecreated in master"

52) git merge branch1   #it will merge it 

(a file iwll open press i then the change yellow color text if you want ....then press esc :wq) 

53) git log --oneline --graph 


(use same type of commands from 41 to 51 ....process woudl be same but create different files with different commit messages and different branch)

54) git rebase branch1

55) git log --oneline --graph
















